The input array list has unsorted numbers which will require sorting for efficient implementation. For this a binary sort insertion is used to sort the input array list. Binary sort insertion is based on binary search. Once the input array is sorted in this implementation from smallest to larget the problem becomes simple. The next step involves finding how many digits each of the two numbers will have. If the input array size is even then equal number of digits and if odd then one number is one digit smaller. Starting from the sorted input array end from the largest digit every alternate number is added to the number with the more or equal digits and then every alternate digit from the second largest number from the big end is added to the number with less or equal digits. The time complexity is O(nlog n) for the binary insertion sort and the whole implementation.